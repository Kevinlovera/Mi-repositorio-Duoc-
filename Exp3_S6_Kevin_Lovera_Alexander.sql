
-- BORRAR TABLAS SI EXISTEN

BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE PAGO CASCADE CONSTRAINTS';
EXCEPTION WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE DETALLE_RECETA CASCADE CONSTRAINTS';
EXCEPTION WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE RECETA CASCADE CONSTRAINTS';
EXCEPTION WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE CITA CASCADE CONSTRAINTS';
EXCEPTION WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE MEDICO CASCADE CONSTRAINTS';
EXCEPTION WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE PACIENTE CASCADE CONSTRAINTS';
EXCEPTION WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE MEDICAMENTO CASCADE CONSTRAINTS';
EXCEPTION WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE ESPECIALIDAD CASCADE CONSTRAINTS';
EXCEPTION WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE COMUNA CASCADE CONSTRAINTS';
EXCEPTION WHEN OTHERS THEN NULL;
END;
/

-- =====================================
-- CREAR TABLAS EN ORDEN PARA NO FALLAR FK
-- =====================================
CREATE TABLE COMUNA (
    id_comuna NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    nombre    VARCHAR2(100) NOT NULL
);

CREATE TABLE ESPECIALIDAD (
    id_especialidad NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    nombre          VARCHAR2(100) NOT NULL
);

CREATE TABLE PACIENTE (
    id_paciente      NUMBER PRIMARY KEY,
    nombre           VARCHAR2(100) NOT NULL,
    fecha_nacimiento DATE,
    telefono         VARCHAR2(20),
    rut              VARCHAR2(10) CHECK (REGEXP_LIKE(rut,'^[0-9]{1,8}[0-9K]$'))
);

CREATE TABLE MEDICO (
    id_medico       NUMBER PRIMARY KEY,
    nombre          VARCHAR2(100) NOT NULL,
    telefono        VARCHAR2(20) UNIQUE,
    id_especialidad NUMBER,
    rut             VARCHAR2(10) CHECK (REGEXP_LIKE(rut,'^[0-9]{1,8}[0-9K]$')),
    CONSTRAINT fk_medico_especialidad FOREIGN KEY (id_especialidad) REFERENCES ESPECIALIDAD(id_especialidad)
);

CREATE TABLE CITA (
    id_cita      NUMBER PRIMARY KEY,
    fecha_cita   DATE NOT NULL,
    id_paciente  NUMBER NOT NULL,
    id_medico    NUMBER NOT NULL,
    CONSTRAINT fk_cita_paciente FOREIGN KEY (id_paciente) REFERENCES PACIENTE(id_paciente),
    CONSTRAINT fk_cita_medico FOREIGN KEY (id_medico) REFERENCES MEDICO(id_medico)
);

CREATE TABLE RECETA (
    id_receta        NUMBER PRIMARY KEY,
    descripcion      VARCHAR2(255),
    fecha_emision    DATE DEFAULT SYSDATE,
    fecha_expiracion DATE,
    tipo_receta      VARCHAR2(50) CHECK (tipo_receta IN ('digital','magistral','retenida','general','veterinaria')),
    id_cita          NUMBER NOT NULL,
    CONSTRAINT fk_receta_cita FOREIGN KEY (id_cita) REFERENCES CITA(id_cita)
);

CREATE TABLE MEDICAMENTO (
    id_medicamento  NUMBER PRIMARY KEY,
    nombre          VARCHAR2(100) NOT NULL,
    dosis           VARCHAR2(50),
    stock           NUMBER DEFAULT 0,
    tipo            VARCHAR2(50),
    precio_unitario NUMBER CHECK (precio_unitario BETWEEN 1000 AND 2000000)
);

CREATE TABLE DETALLE_RECETA (
    id_detalle      NUMBER PRIMARY KEY,
    id_receta       NUMBER NOT NULL,
    id_medicamento  NUMBER NOT NULL,
    cantidad        NUMBER DEFAULT 1,
    CONSTRAINT fk_detalle_receta FOREIGN KEY (id_receta) REFERENCES RECETA(id_receta),
    CONSTRAINT fk_detalle_medicamento FOREIGN KEY (id_medicamento) REFERENCES MEDICAMENTO(id_medicamento)
);

CREATE TABLE PAGO (
    id_pago      NUMBER PRIMARY KEY,
    id_receta    NUMBER NOT NULL,
    fecha_pago   DATE DEFAULT SYSDATE,
    monto        NUMBER NOT NULL,
    metodo_pago  VARCHAR2(20) CHECK (metodo_pago IN ('EFECTIVO','TARJETA','TRANSFERENCIA')),
    CONSTRAINT fk_pago_receta FOREIGN KEY (id_receta) REFERENCES RECETA(id_receta)
);
